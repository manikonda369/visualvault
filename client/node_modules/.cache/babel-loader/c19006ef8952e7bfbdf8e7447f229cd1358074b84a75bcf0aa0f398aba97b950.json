{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Kumar sai/OneDrive/Desktop/Final_Project/graphical-password-authentication/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\nfunction keyframes(_ref) {\n  var keyframeValues = _ref.keyframes,\n    _ref$ease = _ref.ease,\n    ease = _ref$ease === void 0 ? easeInOut : _ref$ease,\n    times = _ref.times,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 300 : _ref$duration;\n  keyframeValues = _toConsumableArray(keyframeValues);\n  /**\n   * Easing functions can be externally defined as strings. Here we convert them\n   * into actual functions.\n   */\n  var easingFunctions = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);\n  /**\n   * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n   * to reduce GC during animation.\n   */\n  var state = {\n    done: false,\n    value: keyframeValues[0]\n  };\n  /**\n   * Create a times array based on the provided 0-1 offsets\n   */\n  var absoluteTimes = convertOffsetToTimes(\n  // Only use the provided offsets if they're the correct length\n  // TODO Maybe we should warn here if there's a length mismatch\n  times && times.length === keyframeValues.length ? times : defaultOffset(keyframeValues), duration);\n  function createInterpolator() {\n    return interpolate(absoluteTimes, keyframeValues, {\n      ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)\n    });\n  }\n  var interpolator = createInterpolator();\n  return {\n    next: function next(t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function flipTarget() {\n      keyframeValues.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\nexport { defaultEasing, keyframes };","map":{"version":3,"names":["easeInOut","interpolate","defaultOffset","convertOffsetToTimes","isEasingArray","easingDefinitionToFunction","defaultEasing","values","easing","map","splice","length","keyframes","keyframeValues","ease","times","duration","easingFunctions","state","done","value","absoluteTimes","createInterpolator","Array","isArray","interpolator","next","t","flipTarget","reverse"],"sources":["C:/Users/Kumar sai/OneDrive/Desktop/Final_Project/graphical-password-authentication/client/node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs"],"sourcesContent":["import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,aAAa,EAAEC,0BAA0B,QAAQ,qBAAqB;AAE/E,SAASC,aAAa,CAACC,MAAM,EAAEC,MAAM,EAAE;EACnC,OAAOD,MAAM,CAACE,GAAG,CAAC;IAAA,OAAMD,MAAM,IAAIR,SAAS;EAAA,EAAC,CAACU,MAAM,CAAC,CAAC,EAAEH,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;AAC7E;AACA,SAASC,SAAS,OAA0E;EAAA,IAA5DC,cAAc,QAAzBD,SAAS;IAAA,iBAAkBE,IAAI;IAAJA,IAAI,0BAAGd,SAAS;IAAEe,KAAK,QAALA,KAAK;IAAA,qBAAEC,QAAQ;IAARA,QAAQ,8BAAG,GAAG;EACnFH,cAAc,sBAAOA,cAAc,CAAC;EACpC;AACJ;AACA;AACA;EACI,IAAMI,eAAe,GAAGb,aAAa,CAACU,IAAI,CAAC,GACrCA,IAAI,CAACL,GAAG,CAACJ,0BAA0B,CAAC,GACpCA,0BAA0B,CAACS,IAAI,CAAC;EACtC;AACJ;AACA;AACA;EACI,IAAMI,KAAK,GAAG;IACVC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAEP,cAAc,CAAC,CAAC;EAC3B,CAAC;EACD;AACJ;AACA;EACI,IAAMQ,aAAa,GAAGlB,oBAAoB;EAC1C;EACA;EACAY,KAAK,IAAIA,KAAK,CAACJ,MAAM,KAAKE,cAAc,CAACF,MAAM,GACzCI,KAAK,GACLb,aAAa,CAACW,cAAc,CAAC,EAAEG,QAAQ,CAAC;EAC9C,SAASM,kBAAkB,GAAG;IAC1B,OAAOrB,WAAW,CAACoB,aAAa,EAAER,cAAc,EAAE;MAC9CC,IAAI,EAAES,KAAK,CAACC,OAAO,CAACP,eAAe,CAAC,GAC9BA,eAAe,GACfX,aAAa,CAACO,cAAc,EAAEI,eAAe;IACvD,CAAC,CAAC;EACN;EACA,IAAIQ,YAAY,GAAGH,kBAAkB,EAAE;EACvC,OAAO;IACHI,IAAI,EAAE,cAACC,CAAC,EAAK;MACTT,KAAK,CAACE,KAAK,GAAGK,YAAY,CAACE,CAAC,CAAC;MAC7BT,KAAK,CAACC,IAAI,GAAGQ,CAAC,IAAIX,QAAQ;MAC1B,OAAOE,KAAK;IAChB,CAAC;IACDU,UAAU,EAAE,sBAAM;MACdf,cAAc,CAACgB,OAAO,EAAE;MACxBJ,YAAY,GAAGH,kBAAkB,EAAE;IACvC;EACJ,CAAC;AACL;AAEA,SAAShB,aAAa,EAAEM,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}