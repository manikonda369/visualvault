{"ast":null,"code":"import { resolveElements } from '../utils/resolve-element.mjs';\nvar thresholds = {\n  any: 0,\n  all: 1\n};\nfunction inView(elementOrSelector, onStart) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    root = _ref.root,\n    rootMargin = _ref.margin,\n    _ref$amount = _ref.amount,\n    amount = _ref$amount === void 0 ? \"any\" : _ref$amount;\n  var elements = resolveElements(elementOrSelector);\n  var activeIntersections = new WeakMap();\n  var onIntersectionChange = function onIntersectionChange(entries) {\n    entries.forEach(function (entry) {\n      var onEnd = activeIntersections.get(entry.target);\n      /**\n       * If there's no change to the intersection, we don't need to\n       * do anything here.\n       */\n      if (entry.isIntersecting === Boolean(onEnd)) return;\n      if (entry.isIntersecting) {\n        var newOnEnd = onStart(entry);\n        if (typeof newOnEnd === \"function\") {\n          activeIntersections.set(entry.target, newOnEnd);\n        } else {\n          observer.unobserve(entry.target);\n        }\n      } else if (onEnd) {\n        onEnd(entry);\n        activeIntersections.delete(entry.target);\n      }\n    });\n  };\n  var observer = new IntersectionObserver(onIntersectionChange, {\n    root: root,\n    rootMargin: rootMargin,\n    threshold: typeof amount === \"number\" ? amount : thresholds[amount]\n  });\n  elements.forEach(function (element) {\n    return observer.observe(element);\n  });\n  return function () {\n    return observer.disconnect();\n  };\n}\nexport { inView };","map":{"version":3,"names":["resolveElements","thresholds","any","all","inView","elementOrSelector","onStart","root","rootMargin","margin","amount","elements","activeIntersections","WeakMap","onIntersectionChange","entries","forEach","entry","onEnd","get","target","isIntersecting","Boolean","newOnEnd","set","observer","unobserve","delete","IntersectionObserver","threshold","element","observe","disconnect"],"sources":["C:/Users/Kumar sai/OneDrive/Desktop/Final_Project/graphical-password-authentication/client/node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs"],"sourcesContent":["import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    any: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"any\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,8BAA8B;AAE9D,IAAMC,UAAU,GAAG;EACfC,GAAG,EAAE,CAAC;EACNC,GAAG,EAAE;AACT,CAAC;AACD,SAASC,MAAM,CAACC,iBAAiB,EAAEC,OAAO,EAAqD;EAAA,+EAAJ,CAAC,CAAC;IAA/CC,IAAI,QAAJA,IAAI;IAAUC,UAAU,QAAlBC,MAAM;IAAA,mBAAcC,MAAM;IAANA,MAAM,4BAAG,KAAK;EAClF,IAAMC,QAAQ,GAAGX,eAAe,CAACK,iBAAiB,CAAC;EACnD,IAAMO,mBAAmB,GAAG,IAAIC,OAAO,EAAE;EACzC,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,OAAO,EAAK;IACtCA,OAAO,CAACC,OAAO,CAAC,UAACC,KAAK,EAAK;MACvB,IAAMC,KAAK,GAAGN,mBAAmB,CAACO,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC;MACnD;AACZ;AACA;AACA;MACY,IAAIH,KAAK,CAACI,cAAc,KAAKC,OAAO,CAACJ,KAAK,CAAC,EACvC;MACJ,IAAID,KAAK,CAACI,cAAc,EAAE;QACtB,IAAME,QAAQ,GAAGjB,OAAO,CAACW,KAAK,CAAC;QAC/B,IAAI,OAAOM,QAAQ,KAAK,UAAU,EAAE;UAChCX,mBAAmB,CAACY,GAAG,CAACP,KAAK,CAACG,MAAM,EAAEG,QAAQ,CAAC;QACnD,CAAC,MACI;UACDE,QAAQ,CAACC,SAAS,CAACT,KAAK,CAACG,MAAM,CAAC;QACpC;MACJ,CAAC,MACI,IAAIF,KAAK,EAAE;QACZA,KAAK,CAACD,KAAK,CAAC;QACZL,mBAAmB,CAACe,MAAM,CAACV,KAAK,CAACG,MAAM,CAAC;MAC5C;IACJ,CAAC,CAAC;EACN,CAAC;EACD,IAAMK,QAAQ,GAAG,IAAIG,oBAAoB,CAACd,oBAAoB,EAAE;IAC5DP,IAAI,EAAJA,IAAI;IACJC,UAAU,EAAVA,UAAU;IACVqB,SAAS,EAAE,OAAOnB,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAGT,UAAU,CAACS,MAAM;EACtE,CAAC,CAAC;EACFC,QAAQ,CAACK,OAAO,CAAC,UAACc,OAAO;IAAA,OAAKL,QAAQ,CAACM,OAAO,CAACD,OAAO,CAAC;EAAA,EAAC;EACxD,OAAO;IAAA,OAAML,QAAQ,CAACO,UAAU,EAAE;EAAA;AACtC;AAEA,SAAS5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}